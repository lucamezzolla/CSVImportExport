package csvimportexport;

import java.awt.Toolkit;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luca.mezzolla
 */
public class RemoveColumnFrame extends javax.swing.JFrame {
    
    private final JTable table;
    private final DefaultListModel listModel;
    
    public RemoveColumnFrame(JTable table) {
        initComponents();
        this.table = table;
        listModel = new DefaultListModel();
        JRootPane rootPane = SwingUtilities.getRootPane(submitButton); 
        rootPane.setDefaultButton(submitButton);
    }
    
    public void buildUI() {
        if(table.getColumnCount() > 0) {
            for(int i = 0; i < table.getColumnCount(); i++) {
                listModel.addElement(table.getColumnName(i));
            }
            columnsList.setModel(listModel);
        } else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Error: columns not found");
            dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        columnsList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Remove Columns");
        setAlwaysOnTop(true);
        setResizable(false);

        submitButton.setText("OK");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        columnsList.setBackground(new java.awt.Color(240, 240, 240));
        columnsList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        columnsList.setOpaque(false);
        jScrollPane1.setViewportView(columnsList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 333, Short.MAX_VALUE)
                        .addComponent(submitButton))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        Vector columns = new Vector();
        if(listModel.size() > 0) {
            for(String column : columnsList.getSelectedValuesList()) {
                int index = getColumnIndex(table, column);
                removeColumn(index, table);
            }
        }       
        dispose();
    }//GEN-LAST:event_submitButtonActionPerformed

    private int getColumnIndex (JTable table, String header) {
        for (int i=0; i < table.getColumnCount(); i++) {
            if (table.getColumnName(i).equals(header)) return i;
        }
        return -1;
    }
    
    private void removeColumn(int index, JTable myTable){
        int nRow= myTable.getRowCount();
        int nCol= myTable.getColumnCount()-1;
        Object[][] cells= new Object[nRow][nCol];
        String[] names= new String[nCol];
        for(int j=0; j<nCol; j++) {
            if(j<index) {
                names[j]= myTable.getColumnName(j);
                for(int i=0; i<nRow; i++){
                    cells[i][j]= myTable.getValueAt(i, j);
                }
            } else{
                names[j]= myTable.getColumnName(j+1);
                for(int i=0; i<nRow; i++){
                    cells[i][j]= myTable.getValueAt(i, j+1);
                }
            }
        }
        DefaultTableModel newModel= new DefaultTableModel(cells, names);
        myTable.setModel(newModel);       
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> columnsList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
